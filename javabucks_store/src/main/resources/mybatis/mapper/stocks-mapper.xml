<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="mybatis.mapper.stocks-mapper">

	<!-- s: 재고 현황 조회 -->
	<select id="bevStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'BEV'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="fooStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'CAK' or stockCateCode = 'SAN'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="cupStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'CUP'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="syrStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'SYR'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="whiStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'WHI'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="milStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'MIL'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="tumStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'TUM'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	
	<select id="wonStocksList" resultType="StoreStocksDTO">
		select * 
		from ( select rownum rn, C.*
				from ( select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
					   from javabucks_storeStocks A
		 			   join javabucks_stockList B
					   on A.stockListCode = B.stockListCode
					   where stockCateCode = 'WON'
					   order by A.stockListCode asc) C)
		where rn between #{startRow} and #{endRow}		
	</select>
	<!-- s: 재고 현황 조회 -->	
	
	<!-- s: 재고 리스트 개수 -->
	<select id="bevCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'BEV'
		)
	</select>
	
	<select id="fooCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'CAK' or stockCateCode = 'SAN'
		)	
	</select>
	
	<select id="cupCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'CUP'
		)	
	</select>
	
	<select id="syrCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'SYR'
		)	
	</select>
	
	
	<select id="whiCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'WHI'
		)	
	</select>
	
	
	<select id="milCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'MIL'
		)	
	</select>
	
	<select id="tumCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'TUM'
		)	
	</select>
	
	<select id="wonCount" resultType="int">
		select count(*) 
		from (select A.*, B.stockCateCode, B.stockListName, B.stockListPrice, B.stockListImage
				from javabucks_storeStocks A
				join javabucks_stockList B
				on A.stockListCode = B.stockListCode
				where stockCateCode = 'WON'
		)	
	</select>
	<!-- e: 재고 리스트 개수 -->
	
	<!-- s: 재고 장바구니 -->
	
	<insert id="addStocksCart" parameterType="java.util.Map">
		insert into javabucks_stockCart 
   		(stockCartNum, bucksId, stockListCode, stockCartCount, stockCartRegDate) 
    	values 
    	(seq_stockCartNum.NEXTVAL, 'bucks001', #{stockListCode}, #{quantity}, SYSDATE)
	</insert>
	
	<!-- e: 재고 장바구니 -->
	
	
	
	
	
	
	
	
	
</mapper>